import streamlit as st
from typing import List
import psycopg2
from pydantic import BaseModel, ValidationError
import pandas as pd

# --- Define your Pydantic model
class Word(BaseModel):
    # Assuming word_id is auto-generated by the database
    french_word: str
    russian_word: str
    category: str
    subcategory: str
    example_sentence: str | None = None  # Optional example sentence


# --- Function to read and validate CSV data
def read_and_validate_csv(uploaded_file):
    valid_data = []
    try:
        df = pd.read_csv(uploaded_file)  # Directly read CSV from Streamlit upload
        for _, row in df.iterrows():
            try:
                # Convert example_sentence to None if empty
                if pd.isna(row["example_sentence"]) or row["example_sentence"] == "":
                    row["example_sentence"] = None
                word = Word(**row.to_dict())
                valid_data.append(word)
            except ValidationError as e:
                st.error(f"Validation error in row {_+1}: {e}")
                return None  # Stop processing if validation fails
        return valid_data
    except Exception as e:  # Handle file reading errors
        st.error(f"Error reading CSV file: {e}")
        return None